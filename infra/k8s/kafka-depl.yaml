apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  # namespace: kafka
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          ports:
            - containerPort: 9092
              name: kafka
            - containerPort: 9093
              name: controller
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KAFKA_CFG_NODE_ID
              value: "$(shell echo ${POD_NAME} | cut -d'-' -f2)"
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: "1E785D31-8957-42B6-AE55-CBE71983941E"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "controller,broker"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka-0.kafka.svc.default.cluster.local:9093,1@kafka-1.kafka.svc.default.cluster.local:9093,2@kafka-2.kafka.svc.default.cluster.local:9093"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://$(POD_NAME).kafka.svc.cluster.local:9092"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          command: ["/bin/bash"]
          args:
            - -c
            - |
              export KAFKA_CFG_NODE_ID=$(echo ${POD_NAME} | sed 's/.*-//')
              /opt/bitnami/scripts/kafka/entrypoint.sh /opt/bitnami/scripts/kafka/run.sh
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi


---
apiVersion: v1
kind: Service
metadata:
  name: kafka                               #  Headless service for stable DNS
  # namespace: kafka
spec:
  clusterIP: None                           #  Important! Makes the service headless
  selector:
    app: kafka                              #  Must match pod label
  ports:
    - port: 9092
      name: kafka
    - port: 9093
      name: controller




